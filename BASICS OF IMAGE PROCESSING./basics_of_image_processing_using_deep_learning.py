# -*- coding: utf-8 -*-
"""BASICS OF IMAGE PROCESSING USING DEEP LEARNING.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JYDVUj-pKmVIVGnsgCff7b7ZcRSGcIoI

This task involves a simple image preprocessing step on an RGB image. First, the image is imported from a web address using the `!wget` command followed by the link to the image. The selected image captures a memorable moment: Ben Stokes celebrating his match-winning century in a test match, achieved with the last wicket remaining.

in this task i have tried implementing basic uses of image preprocessing on one single image using

Librariesfor Preprocessing:

**1.matplotlib.image**: For reading and displaying images.

**2.Pillow**: To perform basic image manipulations like resizing.

**3.OpenCV**: For advanced image processing tasks like converting to grayscale.

TO GET AND IMAGE USING '!wget' FROM GOOGLE ADDRESS
"""

!wget 'https://c.ndtvimg.com/2020-08/0g5s6oug_ben-stokes-twitter_625x300_25_August_20.jpg'

"""**IMPORTING NECESSARY MODULES**"""

import matplotlib.image as mping
import matplotlib.pyplot as plt

"""**LOAD THE IMAGE USING IMAGE MODULE**"""

img = mping.imread('/content/benstokes.jpg')

type(img)

img.shape

"""**CONVERTING JPG IMAGE INTO NUMPY ARRAY**"""

print(img)

"""**NOW DISPLAYING NUMPY ARRAY INTO JPG IMAGE**"""

img_plot = plt.imshow(img)

"""**USING 'pillow' LIBRARY : TO RESIZING THE IMAGE **"""

from PIL import Image

img = Image.open('/content/benstokes.jpg')

img_resize = img.resize((400,400))

img_resize.save('benstokes_resized.jpg')

"""**READING THE RESIZED IMAGE**"""

img = mping.imread('/content/benstokes_resized.jpg')
resized_plot = plt.imshow(img)
plt.show()

img.shape

"""**USING 'opencv' : Now Converting RGB images to Grayscale image**

**IMPORTING THE LIBRARY**
"""

import cv2

img = cv2.imread('/content/benstokes.jpg')

grayscale_image = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)

type(grayscale_image)

grayscale_image.shape

from google.colab.patches import cv2_imshow

"""cv2.imshow() will display the image. But this will not be allowed in Google Colab.

"""

from google.colab.patches import cv2_imshow

"""**SHOWING IMAGE**"""

cv2_imshow(grayscale_image)

"""**TO SAVE THE IMAGE**"""

cv2.imwrite('dog_grayscale_image.jpg', grayscale_image)

"""In this task, we looked at basic image preprocessing using three famous libraries: matplotlib.image, Pillow, and OpenCV. We started by importing an image from a web address and then showed how to load, display, resize, and convert an image into grayscale. Each of these steps was used to show the strengths and specific applications of the libraries used.

This not only demonstrates basic preprocessing steps but also gives an idea of how an image can be manipulated to get it ready for further analysis or application in computer vision. Such techniques are considered essential for preparing data on object detection, image classification, or feature extraction.
"""